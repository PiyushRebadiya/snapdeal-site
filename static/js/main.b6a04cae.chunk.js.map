{"version":3,"sources":["component/Accordionfiles.js","component/Cardfile.js","App.js","reportWebVitals.js","index.js"],"names":["Accordionfiles","useState","key","value","name","address","accordionObject","spinner","setSpinner","useEffect","setTimeout","changeHandler","e","target","classList","toggle","Spinner","animation","role","className","Accordion","map","item","index","Card","id","Header","Toggle","as","Button","variant","eventKey","onClick","Array","isArray","data","i","Collapse","Body","Cardfile","card","setcard","fetch","then","response","json","class","src","image","title","category","price","description","href","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6a04cae.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport \"../assest/css/Accordion.css\"\r\n\r\nconst Accordionfiles = () => {\r\n  const [accordionObject, setAccordionObject] = useState([\r\n    { key: 'what is E-cart ?', value: 'ECART. European Consortium for Agricultural Research in the Tropics.' },\r\n    { key: 'How is the Process of E-Cart ?', value: 'The fee covers the costs to prepare reports, compile documents, submit your application, provide counselling and guide you through the process.' },\r\n    { key: 'what is the Advantage of E-Cart ?', value: 'Manages Multiple Products & Product categories,Manufacturer and  Supports Multiple-countries.' },\r\n    { key: 'what is the Disadvantage of E-Cart ?', value: 'Fraud and security concerns,Lack of full cost disclosure,Privacy and Hands-on inspection.' },\r\n    { key: 'what is the Rule of E-Cart ?', value: 'The rules define e-rickshaw as a special purpose battery operated vehicle having three wheels and intended to provide last mile connectivity for transport of passengers for hire or reward' },\r\n    { key: 'What is E-Cart Related Terms ?', value: 'shopping cart,social shopping,Coupon Code Definition & Meaning and electronic commerce (e-commerce)' },\r\n    { key: 'Where is E-Cart  Headquartered ?', value: 'E-Cart logistics or E-Cart courier is an Indian courier delivery services company, headquartered in Bangalore,Karnataka' },\r\n    { key: 'Address', value: [{ name: 'India', address: 'M-31,Stark Tower,Varachha,Surat-395006' }, { name: 'Australia', address: 'S-19,Tony Tower,Varachha,Gondal-360311' }] }\r\n  ])\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setSpinner(false), 3000)\r\n  }, []);\r\n\r\n  const changeHandler = (e) => {\r\n    var toggle = e.target\r\n    toggle.classList.toggle(\"collapsed\")\r\n  }\r\n  return (\r\n    <div>\r\n      {\r\n        spinner ? \r\n        <div>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n          </Spinner>\r\n          <span className=\"loadingText\">Loading...</span>\r\n        </div> :\r\n          <div className=\"container\">\r\n            <div >\r\n              <h2 className=\"h2Accordion\">Accordion Demo</h2>\r\n            </div>\r\n            <Accordion>\r\n              {\r\n                accordionObject.map((item, index) => {\r\n                  return (\r\n                    <Card id=\"card\">\r\n                      <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey={index + 1} onClick={(e) => changeHandler(e)} id=\"collapsed\" className=\"collapsed\">\r\n                          {item.key}\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      {\r\n                        Array.isArray(item.value) ? item && item.value.map((data, i) => {\r\n                          return (\r\n                            <Accordion.Collapse eventKey={index + 1}>\r\n                              <Card.Body className=\"p-2\">\r\n                                <Accordion>\r\n                                  <Card>\r\n                                    <Card.Header>\r\n                                      <Accordion.Toggle as={Button} variant=\"link\" eventKey={i + 2} onClick={(e) => changeHandler(e)} id=\"collapsed\" className=\"collapsed\">\r\n                                        {data.name}\r\n                                      </Accordion.Toggle>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={i + 2} className=\"cardBodyBg\">\r\n                                      <Card.Body>{data.address} </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                  </Card>\r\n                                </Accordion>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          )\r\n                        }) : <Accordion.Collapse eventKey={index + 1} className=\"cardBodyBg\">\r\n                          <Card.Body>{item.value}</Card.Body>\r\n                        </Accordion.Collapse>\r\n                      }\r\n                    </Card>\r\n                  )\r\n                })\r\n              }\r\n            </Accordion>\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordionfiles\r\n","import React, { useEffect, useState } from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport \"../assest/css/Card.css\"\r\n\r\nconst Cardfile = () => {\r\n  const [card, setcard] = useState()\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('https://fakestoreapi.com/products')\r\n      .then(response => response.json())\r\n      .then(data => setcard(data));\r\n    setTimeout(() => setSpinner(false), 3000)\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        spinner ?\r\n          <div>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n            </Spinner>\r\n            <span className=\"loadingText\">Loading...</span>\r\n          </div> :\r\n          <div className=\"container-fluid px-5 py-4\">\r\n            <div className=\"row\">\r\n              {\r\n                card && card.map((item) => {\r\n                  return (\r\n                    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-2\">\r\n                      <div class=\"card mt-4\">\r\n                        <div class=\"carcard-actiond-image\">\r\n                          <img class=\"img-responsive\" src={item.image} />\r\n                          <h4 class=\"card-title\">{item.title}</h4>\r\n                        </div>\r\n                        <div class=\"card-content\">\r\n                          <h5>{item.category}</h5>\r\n                          <h6>Price : {item.price}</h6>\r\n                          <p>{item.description}</p>\r\n                        </div>\r\n                        <div class=\"card-action\">\r\n                          <a href={item.image} target=\"new_blank\">Photo</a>\r\n                          <a href=\"#\" target=\"new_blank\" className=\"aChange r-4\">Link</a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardfile\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Accordionfiles from './component/Accordionfiles';\r\nimport Cardfile from './component/Cardfile';\r\n\r\nfunction App() {\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setSpinner(false), 3000)\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      {\r\n        spinner ? <p>Refresh....</p> :\r\n          <div>\r\n            <div id=\"header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 col-12 firstDiv\">\r\n                    <h1 id=\"logo\"><Link to=\"/\" className=\"none\">snapdeal</Link></h1>\r\n                  </div>\r\n                  <div className=\"col-md-4 col-12 justify-content-left\">\r\n                    <ul id=\"menu\" className=\"float-md-right\">\r\n                      <li className=\"ml-7\"><Link to=\"/accordion\">Accordion</Link></li>\r\n                      <li><Link to=\"/card\">Card</Link></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Switch>\r\n              <Route path=\"/accordion\">\r\n                <Accordionfiles />\r\n              </Route>\r\n              <Route path=\"/card\">\r\n                <Cardfile />\r\n              </Route>\r\n            </Switch>\r\n\r\n          </div>\r\n      }\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}